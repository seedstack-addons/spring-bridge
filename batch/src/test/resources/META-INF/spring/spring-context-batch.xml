<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright Â© 2013-2020, The SeedStack authors <http://seedstack.org>

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:seed="http://www.seedstack.org/xml-schemas/spring-support"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd


			http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
			http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
			http://www.seedstack.org/xml-schemas/spring-support http://www.seedstack.org/xml-schemas/spring-support/spring-support-1.1.xsd">

    <import resource="spring-context-orm.xml"/>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="transactionManager2" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory2"/>
        <property name="dataSource" ref="dataSource2"/>
    </bean>

    <bean id="persistenceAnnotation"
          class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="isolationLevelForCreate" value="ISOLATION_DEFAULT"/>
    </bean>

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository"/>
    </bean>

    <bean id="contactWriter"
          class="org.seedstack.spring.batch.sample.writer.ContactWriter">
        <property name="contactService">
            <seed:instance class="org.seedstack.spring.batch.sample.service.ContactService"/>
        </property>
    </bean>


    <bean id="userWriter" class="org.seedstack.spring.batch.sample.writer.UserWriter">
        <property name="userService">
            <seed:instance class="org.seedstack.spring.batch.sample.service.UserService"/>
        </property>
    </bean>
    <batch:job id="fileUploadJob">
        <batch:listeners>
            <batch:listener ref="jobExecutionListener"/>
        </batch:listeners>
        <batch:step id="step0">
            <batch:tasklet transaction-manager="transactionManager">
                <batch:transaction-attributes
                        isolation="DEFAULT" propagation="REQUIRES_NEW" timeout="200"/>
                <batch:listeners>
                    <batch:listener ref="failureLoggerListener"/>
                </batch:listeners>
                <batch:chunk reader="itemReader" writer="contactWriter"
                             commit-interval="2"/>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <task:executor id="batchTaskExecutor" pool-size="150"/>
    <batch:job id="fileUploadJobWith2Manager">
        <batch:listeners>
            <batch:listener ref="jobExecutionListener"/>
        </batch:listeners>
        <batch:split id="split" task-executor="batchTaskExecutor" next="step3">
            <batch:flow parent="upload1"/>
            <batch:flow parent="upload2"/>
        </batch:split>
        <batch:step id="step3">
            <batch:tasklet transaction-manager="transactionManager">
                <batch:transaction-attributes
                        isolation="DEFAULT" propagation="REQUIRES_NEW" timeout="200"/>
                <batch:listeners>
                    <batch:listener ref="failureLoggerListener"/>
                </batch:listeners>
                <batch:chunk reader="itemReader" writer="contactWriter"
                             commit-interval="2"/>
            </batch:tasklet>
        </batch:step>
    </batch:job>


    <batch:flow id="upload1">
        <batch:step id="step1">
            <batch:tasklet transaction-manager="transactionManager">
                <batch:transaction-attributes
                        isolation="DEFAULT" propagation="REQUIRES_NEW" timeout="200"/>
                <batch:listeners>
                    <batch:listener ref="failureLoggerListener"/>
                </batch:listeners>
                <batch:chunk reader="itemReader" writer="contactWriter"
                             commit-interval="2"/>
            </batch:tasklet>
        </batch:step>
    </batch:flow>
    <batch:flow id="upload2">
        <batch:step id="step2">
            <batch:tasklet transaction-manager="transactionManager2">
                <batch:transaction-attributes
                        isolation="DEFAULT" propagation="REQUIRES_NEW" timeout="200"/>
                <batch:listeners>
                    <batch:listener ref="failureLoggerListener"/>
                </batch:listeners>
                <batch:chunk reader="itemReader2" writer="userWriter"
                             commit-interval="2"/>
            </batch:tasklet>
        </batch:step>
    </batch:flow>

    <bean id="itemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="classpath:META-INF/contents/Contacts.csv"/>
        <property name="encoding" value="UTF-8"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="firstName,lastName,email"/>
                        <property name="delimiter" value=","/>
                    </bean>
                </property>
                <property name="fieldSetMapper" ref="contactFieldSetMapper"/>
            </bean>
        </property>
    </bean>
    <bean id="itemReader2" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="classpath:META-INF/contents/Contacts.csv"/>
        <property name="encoding" value="UTF-8"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="firstName,lastName,email"/>
                        <property name="delimiter" value=","/>
                    </bean>
                </property>
                <property name="fieldSetMapper" ref="userFieldSetMapper"/>
            </bean>
        </property>
    </bean>
</beans>